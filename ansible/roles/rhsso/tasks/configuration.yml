- name: Get SSO secret
  k8s_info:
    kind: Secret
    name:  credential-example-keycloak
    namespace: '{{ demo_project }}'
    api_version: v1
  register: r_credential
  until:
    - r_credential.resources is defined
    - r_credential.resources[0] is defined
  retries: 10
  delay: 15

- name: Set admin password
  set_fact:
    rhsso_admin_password: '{{ r_credential.resources[0].data.ADMIN_PASSWORD | b64decode }}'

- name: Set admin username
  set_fact:
    rhsso_admin_username: '{{ r_credential.resources[0].data.ADMIN_USERNAME | b64decode }}'

- name: Set SSO host
  set_fact:
    sso_host: 'keycloak-{{ demo_project }}.apps.{{ domain }}'

- name: Get SSO admin token
  uri:
    url: 'https://{{ sso_host }}/auth/realms/master/protocol/openid-connect/token'
    validate_certs: false
    method: POST
    body:
      username: "{{rhsso_admin_username}}"
      password: "{{rhsso_admin_password}}"
      grant_type: "password"
      client_id: "admin-cli"
    body_format: form-urlencoded
    status_code: 200,201,204
  register: rhsso_admin_token
  retries: 120
  delay: 10
  until: rhsso_admin_token.status in [200, 201, 204]

- name: Create threescale Realm
  uri:
    url: 'https://{{ sso_host }}/auth/admin/realms'
    method: POST
    body_format: json
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer {{rhsso_admin_token.json.access_token}}"
    body: "{{ lookup('file', 'threescale-realm.json') }}"
    return_content: yes
    validate_certs: no
    status_code: 201
